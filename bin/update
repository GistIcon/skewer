#!/usr/bin/env ruby
require 'optparse'
$: << File.join(File.dirname(__FILE__), '..', 'lib')
require 'skewer'
require 'ersatz/ersatz_node'
require 'ersatz/ssh_result'
require 'puppet'
require 'bootstrapper'

options = {}

optparse = OptionParser.new do |opts|
  opts.on('-h', '--host KIND', "Hostname to update") do |c|
    options[:host] = c
  end
  opts.on('-u', '--user KIND', "User to connect with") do |u|
    options[:user] = u
  end
  opts.on('-r', '--role NAME', "puppet role class to call") do |r|
    options[:role] = r
  end
  opts.on('-n', '--noop', "do a dry run first") do |n|
    options[:noop] = true
  end
  opts.on('-pc', '--puppetcode') do |pc|
    options[:puppet_repo] = pc
    puts "puppetcode is: " + pc
  end
  options[:kind] = :ersatz
end

optparse.parse!

unless options[:host] && options[:user] 
  raise "Usage: update --host <host> --user <user with sudo rights> --role <puppet role class>"
end

Fog.mock! if options[:mock] == true

Skewer::Skewer.bootstrap_and_go(options)
