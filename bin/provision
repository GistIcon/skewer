#!/usr/bin/env ruby
require 'optparse'

options = {}

optparse = OptionParser.new do |opts|
  # generic options
  opts.on('-c', '--cloud KIND', "Cloud kind ('ec2', 'linode', 'rackspace')") do |c|
    options[:kind] = c.to_sym
  end
  opts.on('-r', '--role NAME', "puppet role class to call") do |r|
    options[:role] = r
  end
  opts.on('-m', '--mock') do |m|
    options[:mock] = true
  end
  opts.on('--keep') do |k|
    options[:keep] = true
  end
  opts.on('--key') do |k|
    options[:key] = k
  end

  # AWS options
  opts.on('-i', '--image NAME') do |img|
    options[:image] = img
  end
  opts.on('--volume SIZE') do |vol|
    # EBS group
    options[:volume] = vol
  end
  opts.on('--region NAME') do |region|
    # AWS region
    options[:region] = region
  end
  opts.on('--key_name NAME') do |k|
    # AWS SSH key
    options[:key_name] = k
  end
    # EC2 Security Group
  opts.on('--group NAME') do |group|
    options[:group] = group
  end
end

optparse.parse!

def usage
  raise "Usage: #{__FILE__} --cloud <which cloud>  --image <AWS image> --role <puppet role class>"
end

unless options[:kind] && options[:image] && options[:role]
puts options.inspect
  usage
end
  
$: << 'lib'
require 'skewer'

Fog.mock! if options[:mock] == true

Skewer::Skewer.bootstrap_and_go(options)
